package edu.ycp.cs482.Trivia.servlet;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;

import edu.ycp.cs482.Model.Question;
import edu.ycp.cs482.Trivia.JSON.JSON;
import edu.ycp.cs482.Trivia.controller.AddQuestion;
import edu.ycp.cs482.Trivia.controller.ChangeQuestion;
import edu.ycp.cs482.Trivia.controller.DeleteQuestion;
import edu.ycp.cs482.Trivia.controller.GetAllQuestion;
import edu.ycp.cs482.Trivia.controller.GetQuestion;
import edu.ycp.cs482.Trivia.controller.getAllQusetionPending;
import edu.ycp.cs482.Trivia.controller.getRandomQuestion;

public class QuestionPage extends HttpServlet{
	private static final long serialVersionUID = 1L;
	private getRandomQuestion randomQuestion = new getRandomQuestion();
	private getAllQusetionPending getallquestionpending = new getAllQusetionPending();
	private GetAllQuestion getallquestion = new GetAllQuestion();
	private GetQuestion getquestion = new GetQuestion();
	private AddQuestion addquestion = new AddQuestion();
	private DeleteQuestion deletequestion = new DeleteQuestion();
	private ChangeQuestion changequestion = new ChangeQuestion();
	private Question question;
	private int id;
	private String pathInfo, q, a1, a2, a3, a4, af;
	
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		pathInfo = req.getPathInfo();
		if (pathInfo == null || pathInfo.equals("") || pathInfo.equals("/")) {
			resp.setStatus(HttpServletResponse.SC_OK);
			
			// Set status code and content type
			resp.setStatus(HttpServletResponse.SC_OK);
			resp.setContentType("application/json");
			
			// Return the item in JSON format
			JSON.getObjectMapper().writeValue(resp.getWriter(), getallquestion.getallQuestion());
			return ;
		}
		
		// Get the user name
		if (pathInfo.startsWith("/")){
			pathInfo = pathInfo.substring(1);
		}
		
		if(pathInfo.contains("pending")){
			resp.setStatus(HttpServletResponse.SC_OK);
			
			// Set status code and content type
			resp.setStatus(HttpServletResponse.SC_OK);
			resp.setContentType("application/json");
			
			// Return the item in JSON format
			JSON.getObjectMapper().writeValue(resp.getWriter(), getallquestionpending.GetallQuestionPending());
			return ;
		}
		
		if(pathInfo.contains("random")){
			resp.setStatus(HttpServletResponse.SC_OK);
			
			// Set status code and content type
			resp.setStatus(HttpServletResponse.SC_OK);
			resp.setContentType("application/json");
			
			// Return the item in JSON format
			JSON.getObjectMapper().writeValue(resp.getWriter(), randomQuestion.RandomQuestion());
			return ;
		}
		
		
		id = Integer.parseInt(pathInfo);	
		question = getquestion.getQuestion(id);								// Use a GetUsercontroller to find the user in the database
		
		if (question == null) {
			// No such item, so return a NOT FOUND response
			resp.setStatus(HttpServletResponse.SC_NOT_FOUND);
			resp.setContentType("text/plain");
			resp.getWriter().println("No Question " + pathInfo);
			return;
		}
		
		// Set status code and content type
		resp.setStatus(HttpServletResponse.SC_OK);
		resp.setContentType("application/json");
		
		// Return the item in JSON format
		JSON.getObjectMapper().writeValue(resp.getWriter(), question);
	}
	
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		question = JSON.getObjectMapper().readValue(req.getReader(), Question.class);
		// Use a GetUser controller to find the item in the database
		addquestion.addQuestion(question);
		// Set status code and content type
		resp.setStatus(HttpServletResponse.SC_OK);
		resp.setContentType("application/json");
		
		// writing the operation out.
		JSON.getObjectMapper().writeValue(resp.getWriter(), question);
	}

	
	protected void doDelete(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		pathInfo = req.getPathInfo();
		if (pathInfo == null || pathInfo.equals("") || pathInfo.equals("/")) {
			resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
			resp.setContentType("text/plain");
			resp.getWriter().println("No qusetion listed");
			return;
		}
		// Get the item name
		if (pathInfo.startsWith("/")){
			pathInfo = pathInfo.substring(1);
		}
		
		id = Integer.parseInt(pathInfo);
		deletequestion.deleteQuestion(id);

		// Set status code and content type
		resp.setStatus(HttpServletResponse.SC_OK);
		resp.setContentType("application/json");
		
		// Return the item in JSON format
		JSON.getObjectMapper().writeValue(resp.getWriter(), pathInfo);
	}
	
	@Override
	protected void doPut(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException, JsonGenerationException, JsonMappingException {
		String pathInfo = req.getPathInfo();
		if (pathInfo == null || pathInfo.equals("") || pathInfo.equals("/")) {
			resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);
			resp.setContentType("application/json");
			return;
		}else{
			// Get the item name
			if (pathInfo.startsWith("/")){
				pathInfo = pathInfo.substring(1);
			}	

			if (pathInfo.contains("/question=")){
				id = Integer.parseInt(pathInfo.substring(0, pathInfo.indexOf('/')));
				q = pathInfo.substring(pathInfo.indexOf("/question=")+1,pathInfo.indexOf('/'));
				a1 = pathInfo.substring(pathInfo.indexOf(q+'/')+1,pathInfo.indexOf('/'));
				a2 = pathInfo.substring(pathInfo.indexOf(a1+'/')+1,pathInfo.indexOf('/'));
				a3 = pathInfo.substring(pathInfo.indexOf(a2+'/')+1,pathInfo.indexOf('/'));
				a4 = pathInfo.substring(pathInfo.indexOf(a3+'/')+1,pathInfo.indexOf('/'));
				af = pathInfo.substring(pathInfo.indexOf(a4+'/')+1,pathInfo.length());
		        if(q.contains("_")||a1.contains("_")||a2.contains("_")||a3.contains("_")||a4.contains("_")||af.contains("_")){
		            q = q.replaceAll("_", " ");
		            a1 = a1.replaceAll("_", " ");
		            a2 = a2.replaceAll("_", " ");
		            a3 = a3.replaceAll("_", " ");
		            a4 = a4.replaceAll("_", " ");
		            af = af.replaceAll("_", " ");
		        }
				
				question = getquestion.getQuestion(id);
				question.setQuestion(q);
				question.setAnswer1(a1);
				question.setAnswer2(a2);
				question.setAnswer3(a3);
				question.setAnswer4(a4);
				question.setFinalAnswer(af);
				
				question = changequestion.changeQuestion(id, question);
				
				// Set status code and content type
				resp.setStatus(HttpServletResponse.SC_OK);
				resp.setContentType("application/json");
				
				// writing the operation out.
				JSON.getObjectMapper().writeValue(resp.getWriter(), question);
				return;
			}	
			
		}
	}
}
